/* AS3	Copyright 2009 __MyCompanyName__.*/package {		import flash.events.*;	import KlugeObject;	import flash.display.*;	/**	 *	Class description.	 *	 *	@langversion ActionScript 3.0	 *	@playerversion Flash 9.0	 *	 *	@author Sven Gali	 *	@since  01.02.2009	 */	public class CalcKluge extends MovieClip {				//--------------------------------------		// CLASS CONSTANTS		//--------------------------------------				//--------------------------------------		//  CONSTRUCTOR		//--------------------------------------				/**		 *	@Constructor		 */		public function CalcKluge(r:Boolean = false){			restart = r;		}				//--------------------------------------		//  PRIVATE VARIABLES		//--------------------------------------				private var playList: Array;		private var videoObjects: Array;		private var startObjects: Array;				private var currentVideoIndex: int;		private var absolutIndex: int;		private var currentVidObj: KlugeObject;				private var KlugeFrage_1_Arr: Array;		private var KlugeFrage_Arr: Array;		private var KlugeAlle_Arr: Array;		private var KlugeAbschied_Arr: Array;				private var Bild_Arr: Array;				private var Boxer_Arr:Array;		private var Wissen_Arr:Array;		private var Autor_Arr:Array;				private var abs_wiss: Array;		private var abs_auto: Array;		private var abs_boxerin: Array;				private var _rolle_abs: Array;		private var _agent_B: Array;				public var restart: Boolean;				//--------------------------------------		//  GETTER/SETTERS		//--------------------------------------				//--------------------------------------		//  PUBLIC METHODS		//--------------------------------------						public function calculateClips(xml:XMLList): Array 		{			playList = new Array ();			videoObjects = new Array ();						startObjects = new Array ();			KlugeFrage_1_Arr = new Array ();			KlugeFrage_Arr = new Array ();			KlugeAlle_Arr = new Array ();			KlugeAbschied_Arr = new Array ();						Bild_Arr = new Array ();						Boxer_Arr = new Array ();			Wissen_Arr = new Array ();			Autor_Arr = new Array ();						abs_wiss = new Array ();			abs_boxerin = new Array ();			abs_auto = new Array ();						_rolle_abs = new Array ();			_agent_B = new Array ();									for (var i:int = 0; i<xml.length(); i++)					//Videoobjecte parsen und in Array legen			{				videoObjects[i] = new KlugeObject (													  i 																		, xml[i].file.text()															, xml[i].myRole.text()															, xml[i].myCategory.text()														, xml[i].myAttribut.text()													, xml[i].myTags													, xml[i].category.text()													, xml[i].attribut.text()													, xml[i].tags												);																				if(videoObjects[i].getMyCategory == "Intro"){					startObjects.push(videoObjects[i]);				}								if(videoObjects[i].getMyRole == "Kluge"){ 					if(videoObjects[i].getMyCategory == "Frage"|| videoObjects[i].getMyCategory == "Frage_Dchtm"){						KlugeAlle_Arr.push(videoObjects[i]);					}					if(videoObjects[i].getMyCategory == "Frage_wer" ){						KlugeFrage_Arr.push(videoObjects[i]);					}					if(videoObjects[i].getMyCategory == "Abschied"){						KlugeAbschied_Arr.push(videoObjects[i]);					}				}								if(videoObjects[i].getMyRole == "Boxerin" && videoObjects[i].getMyCategory != "Intro"){					if(videoObjects[i].getMyCategory == "Abschied"){						abs_boxerin.push(videoObjects[i]);					}else{						Boxer_Arr.push(videoObjects[i]);					}				}								if(videoObjects[i].getMyRole == "Wissenschaftler" && videoObjects[i].getMyCategory != "Intro"){					if(videoObjects[i].getMyCategory == "Abschied"){						abs_wiss.push(videoObjects[i]);					}else{						Wissen_Arr.push(videoObjects[i]);					}				}								if(videoObjects[i].getMyRole == "Schriftstellerin" && videoObjects[i].getMyCategory != "Intro"){					if(videoObjects[i].getMyCategory == "Abschied"){						abs_auto.push(videoObjects[i]);					}else{						Autor_Arr.push(videoObjects[i]);					}				}								if(videoObjects[i].getMyCategory == "Bild"){					Bild_Arr.push(videoObjects[i]);				}										}						//propertyTest ();			trace("startObjects:"+startObjects[0].getUrl);			trace("startObjects:"+startObjects[1].getUrl);			trace("startObjects:"+startObjects[2].getUrl);			trace("KlugeFrage_Arr: "+ KlugeFrage_Arr.length);			trace("KlugeAlle_Arr: "+ KlugeAlle_Arr.length);			trace("KlugeAbschied_Arr: "+ KlugeAbschied_Arr.length);			trace("Startobj_Arr: "+ startObjects.length);			trace("Wissen_Arr: "+ Wissen_Arr.length);			trace("Boxer_Arr: "+ Boxer_Arr.length);			trace("Autor_Arr: "+ Autor_Arr.length);			trace("Bild_Arr: "+ Bild_Arr.length);			trace("abs_boxerin: "+ abs_boxerin.length);			trace("abs_wiss: "+ abs_wiss.length);			trace("abs_auto: "+ abs_auto.length);						/*			for(var i:int = 0; i<Autor_Arr.length; i++)			{				trace("Clipname: "+Autor_Arr[i].getUrl+" Rolle: "+Autor_Arr[i].getMyRole);			}			*/			/*** Agent ermitteln und Begrüßung ***/			currentVideoIndex = Math.round((startObjects.length-1)*Math.random());			switch(startObjects[currentVideoIndex].getMyRole)			{				case "Boxerin":					_agent_B = Boxer_Arr;					_rolle_abs = abs_boxerin;					trace("Genre: Boxerin");					break;				case "Wissenschaftler":					_agent_B = Wissen_Arr;					_rolle_abs = abs_wiss;					trace("Genre: Wissenschaftler");					break;				case "Schriftstellerin":					_agent_B = Autor_Arr;					_rolle_abs = abs_auto;					trace("Genre: Schriftstellerin");					break;			}						/*** Intro in Playlist ***/			playList.push(startObjects[currentVideoIndex].getUrl);						/*** 1. Einführungsfragen ***/			currentVideoIndex = Math.round((KlugeFrage_Arr.length-1)*Math.random());		//Random Frage auswählen			playList.push(KlugeFrage_Arr[currentVideoIndex].getUrl);						currentVidObj = KlugeFrage_Arr[currentVideoIndex];						KlugeFrage_Arr.splice(currentVideoIndex,1);							absolutIndex = checkNachfolger(currentVidObj, _agent_B); //Nachfolger suchen checkNachfolger(aktuelles Objekt, Sucharray:Array);			currentVidObj = _agent_B[absolutIndex];			playList.push(_agent_B[absolutIndex].getUrl);							// Clips aus Array löschen			_agent_B.splice(absolutIndex,1);						for(var i:int = 0; i<2; i++)			{				//  Frage				absolutIndex = checkNachfolger(currentVidObj, KlugeFrage_Arr);						playList.push(KlugeFrage_Arr[absolutIndex].getUrl);				currentVidObj = KlugeFrage_Arr[absolutIndex];								// Clips aus Array löschen				KlugeFrage_Arr.splice(absolutIndex,1);								//Antwort				absolutIndex = checkNachfolger(currentVidObj, _agent_B); //Nachfolger suchen checkNachfolger(aktuelles Objekt, Sucharray:Array);				currentVidObj = _agent_B[absolutIndex];				playList.push(_agent_B[absolutIndex].getUrl);								// Clips aus Array löschen				_agent_B.splice(absolutIndex,1);			}									/*** Bild ***/			absolutIndex = checkBild(currentVidObj, Bild_Arr); //Nachfolger für Bild			playList.push(Bild_Arr[absolutIndex].getUrl);						/*** Meta-suchlauf für 3 Normalfragen ***/				//Random Frage auswählen			currentVideoIndex = Math.round((KlugeAlle_Arr.length-1)*Math.random());					playList.push(KlugeAlle_Arr[currentVideoIndex].getUrl);						currentVidObj = KlugeAlle_Arr[currentVideoIndex];						KlugeAlle_Arr.splice(currentVideoIndex,1);						//Abhängige Antwort			absolutIndex = checkNachfolger(currentVidObj, _agent_B); //Nachfolger suchen checkNachfolger(aktuelles Objekt, Sucharray:Array);			currentVidObj = _agent_B[absolutIndex];			playList.push(_agent_B[absolutIndex].getUrl);							// Clips aus Array löschen			_agent_B.splice(absolutIndex,1);										for(var i:int = 0; i<3; i++)			{								//  Frage				absolutIndex = checkNachfolger(currentVidObj, KlugeAlle_Arr);						playList.push(KlugeAlle_Arr[absolutIndex].getUrl);				currentVidObj = KlugeAlle_Arr[absolutIndex];								// Clips aus Array löschen				KlugeAlle_Arr.splice(absolutIndex,1);								//Antwort				absolutIndex = checkNachfolger(currentVidObj, _agent_B); //Nachfolger suchen checkNachfolger(aktuelles Objekt, Sucharray:Array);				currentVidObj = _agent_B[absolutIndex];				playList.push(_agent_B[absolutIndex].getUrl);								// Clips aus Array löschen				_agent_B.splice(absolutIndex,1);							}						/*** Abschied ***/			currentVideoIndex = Math.round((KlugeAbschied_Arr.length-1)*Math.random());	//Random Frage auswählen			playList.push(KlugeAbschied_Arr[currentVideoIndex].getUrl);			currentVideoIndex = Math.round((_rolle_abs.length-1)*Math.random());	//Random Antwort auswählen			playList.push(_rolle_abs[currentVideoIndex].getUrl);			trace(playList);			return playList;		}									/*** Check Nachfolger ***/		private function checkNachfolger (curVid:KlugeObject, _such_arr:Array): int 		{			var tempObject: Object = new Object ();			tempObject.matchVar = 0;			tempObject.idx = 0;						var _vergl_arr:Array = [];					for (var i:int = 0;  i<_such_arr.length; i++) 			{								_such_arr[i].myMatchVar = 0;												//Matchvariable zurücksetzen								if(_such_arr[i].getKategorie == curVid.getMyCategory)					//Nur die Clips bei dem Rolle und Kategorie stimmen				{					_such_arr[i].myMatchVar += 3;									}									if (_such_arr[i].getAttribut == curVid.getMyAttribut)				{							_such_arr[i].myMatchVar += 3;				}				for each (var item in _such_arr[i].getTags)						//Tags checken				{						for each (var tag in curVid.getMyTags)					{						if(item == tag) _such_arr[i].myMatchVar++;					}				}				if( tempObject.matchVar <= _such_arr[i].myMatchVar)					//Vergleichen ob matchVar höher als Vorgänger				{					tempObject.matchVar = _such_arr[i].myMatchVar;					trace("POST_MatchVar_TempObj: "+tempObject.matchVar);					tempObject.idx = i;					_vergl_arr.push(i);				}			}											_vergl_arr.reverse();			if(_vergl_arr.length>2)			{				//trace("Länge von Vergleich-Array: "+_vergl_arr.length);				//return _vergl_arr[0]; 				return _vergl_arr[Math.round(1*Math.random())];				}else{				return _vergl_arr[0];			}			}						/*** Check Bild ***/		private function checkBild (curVid:KlugeObject, _such_arr:Array): int 		{			var tempObject: Object = new Object ();			tempObject.matchVar = 0;			tempObject.idx = 0;						var _vergl_arr:Array = [];					for (var i:int = 0;  i<_such_arr.length; i++) 			{								_such_arr[i].myMatchVar = 0;												//Matchvariable zurücksetzen								if(_such_arr[i].getMyRole == curVid.getMyRole){					if(_such_arr[i].getKategorie == curVid.getMyCategory)					//Nur die Clips bei dem Rolle und Kategorie stimmen					{										if (_such_arr[i].getAttribut == curVid.getMyAttribut)						{									for each (var item in _such_arr[i].getTags)						//Tags checken							{									for each (var tag in curVid.getMyTags)								{									if(item == tag) _such_arr[i].myMatchVar++;								}							}						}					}				}								if( tempObject.matchVar <= videoObjects[i].myMatchVar)					//Vergleichen ob matchVar höher als Vorgänger				{					tempObject.matchVar = videoObjects[i].myMatchVar;					tempObject.idx = i;					_vergl_arr.push(i);				}			}											_vergl_arr.reverse();			if(_vergl_arr.length>2)			{				return _vergl_arr[0];				//return _vergl_arr[Math.round(1*Math.random())];				}else{				return _vergl_arr[0];			}			}	}}