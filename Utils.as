 package  {	import flash.accessibility.Accessibility;		public class Utils {				// Constants:		// Public Properties:		public static var _time:int;		public static var genre:String;		public static var idx:uint;		public static var definitude:uint;		public static var feeling:String;		public static var errorText:String = "none";		public static var allFilesNames:Array;		public static var toggleDebug = false;		// Private Properties:			// Initialization:		public function Utils() { }			// Public Methods:		public static function randRound(_leng:int):int 		{			var l:int = Math.round(Math.random()*(_leng-1));			return l;		}				public static function randClip_spz(_arr:Array, _cond_1:String, _cond_2:String):int		{			var _temp_arr:Array = [];			for(var i:int=0; i<_arr.length; i++){				if(_arr[i][_cond_1] == _cond_2){					_temp_arr.push(i);				}			}			return _temp_arr[randRound(_temp_arr.length)];		}				public static function traceFlags (o:Object):void		{						trace("---------");			trace("URL: "+o.getUrl);			trace("Kategorie: "+o.getMyCategory);			trace("Rolle: "+o.getMyRole);			trace("MyTAG: "+o.getMyTags);			trace("TAG: "+o.getTags);			trace("---------");		}				public static function testArr(_arr:Array, _cond_1:String):void		{			for(var i:int=0; i<_arr.length; i++){				trace(_arr[i].getUrl							 +": "							 +_cond_1							 +"="							 +_arr[i][_cond_1] );			}		}				public static function remove(removeThis:Array, index:int):void		{			//trace("remove: " + index);			removeThis.splice(index,1);		}				public static function removeWithClipName(removeThis:Array, clipName:String):void		{			for(var i:int; i < removeThis.length; i++)			{				//trace("in loop");				if(clipName == removeThis[i].getClipName)				{					//trace("Element removed: " + removeThis[i].getClipName);					removeThis.splice(i,1);				}			}			//trace("remove: " + index);		}				public static function checkForDuplicates(arrayToCheck:Array)		{			for(var i:int = 0; i < arrayToCheck.length - 1; i++)			{				for(var j:int = i + 1; j < arrayToCheck.length; j++)				{					if(arrayToCheck[i] === arrayToCheck[j]) 					{						trace("ERROR: DUPLICATE ELEMENT - " + arrayToCheck[i]);					}				}			}		}				// not ready yet		public static function sortArray(objectArray:Array):Array		{			var matchingObjects:Array = new Array();					for(var i:int = 0; i < objectArray.length; i++)			{							}			return matchingObjects;		}				public static function timer():void		{					}				public static function whileLoopTest():void		{			var x:int;			var y:int;			do			{				x = Utils.randRound(100);				y = Utils.randRound(100);			}			while(x != 30  && y != 27 );			trace(x + " : " + y);		}		// Protected Methods:	}	}