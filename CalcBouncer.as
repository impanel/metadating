/* AS3	Copyright 2009 Gali.*/package {		import flash.events.*;	import BouncerObject;	import Utils;	import flash.display.*;	/**	 *	Class description.	 *	 *	@langversion ActionScript 3.0	 *	@playerversion Flash 9.0	 *	 *	@author Sven Gali	 *	@since  01.02.2009	 */	public class CalcBouncer extends MovieClip {				/**		 *	@Constructor		 */		public function CalcBouncer (){					}				//--------------------------------------		//  PRIVATE VARIABLES		//--------------------------------------				private var playList: Array;		private var videoObjects: Array;				//Pool Arrays der Rollen		private var frage_staub_arr: Array;		private var antwort_staub_arr: Array;		private var uni_antwort_staub_arr: Array;				private var frage_pastor_arr: Array;		private var antwort_pastor_arr: Array;		private var uni_antwort_pastor_arr: Array;				private var frage_banker_arr: Array;		private var antwort_banker_arr: Array;		private var uni_antwort_banker_arr: Array;				// Array des Agents		private var frage_agent_arr:Array;		private var antwort_agent_arr:Array;		private var uni_agent_arr:Array;		private var uni_antwort_agent_arr:Array;			//Steuerungsarrays		private var intros_arr: Array;		private var outros_arr: Array;						//Temp und Steuervariablen		private var oneVar: Boolean;				private var currentVideoIndex: int;		private var absolutIndex: int;		private var currentVidObj: BouncerObject;				private var rolle:String;						//--------------------------------------		//  GETTER/SETTERS		//--------------------------------------				//--------------------------------------		//  PUBLIC METHODS		//--------------------------------------						public function calculateClips(xml:XMLList): Array {						playList = new Array ();			videoObjects = new Array ();						frage_staub_arr = new Array ();			antwort_staub_arr = new Array ();			uni_antwort_staub_arr = new Array ();						frage_banker_arr = new Array ();			antwort_banker_arr = new Array ();			uni_antwort_banker_arr = new Array ();						frage_pastor_arr = new Array ();			antwort_pastor_arr = new Array ();			uni_antwort_pastor_arr = new Array ();									frage_agent_arr = new Array ();			antwort_agent_arr = new Array ();			uni_antwort_agent_arr = new Array ();						intros_arr = new Array ();			outros_arr = new Array ();												//Videoobjecte parsen und in Array legen			for (var i:int = 0; i<xml.length(); i++)			{				videoObjects[i] = new BouncerObject (													  i 																		, xml[i].file.text()															, xml[i].myRole.text()															, xml[i].myCategory.text()														, xml[i].myTags													, xml[i].role.text()													, xml[i].category.text()													, xml[i].tags												);								//trace("MY-TAGS von Clip "+i+": "+videoObjects[i].getMyTags)				//trace("TAGS von Clip "+i+": "+videoObjects[i].getTags);				//trace("-----------------------------");				if(videoObjects[i].getMyCategory == "Intro"){					intros_arr.push(videoObjects[i]);				} 				else if (videoObjects[i].getMyCategory == "Schluss"){					outros_arr.push(videoObjects[i]);				}				else{					if(videoObjects[i].getMyRole == "Tuersteher" || videoObjects[i].getMyRole == "Staubsauger"){						if(videoObjects[i].getMyCategory == "Frage"){							frage_staub_arr.push(videoObjects[i]);						}						if(videoObjects[i].getMyCategory == "Antwort"){							if(videoObjects[i].getUni){								uni_antwort_staub_arr.push(videoObjects[i]);							}else{								antwort_staub_arr.push(videoObjects[i]);							}						}					}					if(videoObjects[i].getMyRole == "Tuersteher" || videoObjects[i].getMyRole == "Pastor"){						if(videoObjects[i].getMyCategory == "Frage"){							frage_pastor_arr.push(videoObjects[i]);						}						if(videoObjects[i].getMyCategory == "Antwort"){							if(videoObjects[i].getUni){								uni_antwort_pastor_arr.push(videoObjects[i]);							}else{								antwort_pastor_arr.push(videoObjects[i]);							}						}					}					if(videoObjects[i].getMyRole == "Tuersteher" || videoObjects[i].getMyRole == "Banker"){						if(videoObjects[i].getMyCategory == "Frage"){							frage_banker_arr.push(videoObjects[i]);						}						if(videoObjects[i].getMyCategory == "Antwort"){							if(videoObjects[i].getUni){								uni_antwort_banker_arr.push(videoObjects[i]);							}else{								antwort_banker_arr.push(videoObjects[i]);							}						}					}									}			} 						/** 			* Intro *			**/			var _rand:int = Utils.randRound(intros_arr.length);			trace("Introclips: "+intros_arr.length);			playList.push(intros_arr[_rand].getUrl);			Utils.traceFlags(intros_arr[_rand]);									//Utils.testArr(intros_arr, "getMyRole");			//////////////PROBLEM:// Introclips haben Türsteher als Rolle?// Lösung: Ändern in Metadaten!			//Bestimmen des Pools			switch(intros_arr[_rand].getMyRole){				case "Staubsauger": 					frage_agent_arr = frage_staub_arr;					antwort_agent_arr = antwort_staub_arr;					uni_antwort_agent_arr = uni_antwort_staub_arr;					trace("Gewählter Character: Staubsauger => "+intros_arr[_rand].getMyRole);					rolle = "Staubsauger";				break;				case "Pastor": 					frage_agent_arr = frage_pastor_arr;					antwort_agent_arr = antwort_pastor_arr;					uni_antwort_agent_arr = uni_antwort_pastor_arr;					trace("Gewählter Character: Pastor => "+intros_arr[_rand].getMyRole);					rolle = "Pastor";				break;				case "Banker": 					frage_agent_arr = frage_banker_arr;					antwort_agent_arr = antwort_banker_arr;					uni_antwort_agent_arr = uni_antwort_banker_arr;					trace("Gewählter Character: Banker => "+intros_arr[_rand].getMyRole);					rolle = "Banker";				break;				case "Tuersteher":					switch(Utils.randRound(3)){						case 0: 							frage_agent_arr = frage_staub_arr;							antwort_agent_arr = antwort_staub_arr;							uni_antwort_agent_arr = uni_antwort_staub_arr;							trace("Gewählter Türsteher+: Staubsauger => "+intros_arr[_rand].getMyRole);							rolle = "Staubsauger";						break;						case 1: 							frage_agent_arr = frage_pastor_arr;							antwort_agent_arr = antwort_pastor_arr;							uni_antwort_agent_arr = uni_antwort_pastor_arr;							trace("Gewählter Türsteher+: Pastor => "+intros_arr[_rand].getMyRole);							rolle = "Pastor";						break;						case 2: 							frage_agent_arr = frage_banker_arr;							antwort_agent_arr = antwort_banker_arr;							uni_antwort_agent_arr = uni_antwort_banker_arr;							trace("Gewählter Türsteher+: Banker => "+intros_arr[_rand].getMyRole);							rolle = "Banker";						break;					}			}						/** 			* Hauptteil *			**/			currentVidObj = intros_arr[_rand];						//Metasuchlauf			for (var j:int = 0; j<7; j++){					currentVideoIndex = randomAsk(frage_agent_arr, currentVidObj.getMyRole);				//currentVideoIndex = Utils.randRound(frage_agent_arr.length);				currentVidObj = frage_agent_arr[currentVideoIndex];				playList.push(currentVidObj.getUrl);				Utils.traceFlags(currentVidObj);				frage_agent_arr.splice(currentVideoIndex, 1);				// Universal oder nicht Universalantwort...				if(Math.random()<.5){					trace("-----------> UNI-Loop");					absolutIndex = checkNachfolger_uni(currentVidObj);					playList.push(uni_antwort_agent_arr[absolutIndex].getUrl);					currentVidObj = uni_antwort_agent_arr[absolutIndex];					Utils.traceFlags(currentVidObj);					uni_antwort_agent_arr.splice(absolutIndex,1);				}else{					trace("-----------> Anderer-Loop");					absolutIndex = checkNachfolger(currentVidObj);					playList.push(antwort_agent_arr[absolutIndex].getUrl);					currentVidObj = antwort_agent_arr[absolutIndex];					Utils.traceFlags(currentVidObj);					antwort_agent_arr.splice(absolutIndex,1);				}			}					/** 			* Abschied 			*/ 						playList.push(outros_arr[Utils.randClip_spz(outros_arr,"getMyRole",rolle)].getUrl);			//playList.push(outros_arr[Utils.randRound(outros_arr.length)].getUrl);						/**			* Rückgabe 			*/			var i: int = 0;			for each (var item in playList){				trace("URL "+i+": "+item);				i++;			}						return playList;		}							/**		* Nachfolger Funktionen		*/		private function checkNachfolger (curVid:BouncerObject): int 		{			var _temp_arr_def:Array = [];			var _temp_arr:Array = [];			for (var i:int = 0;  i<antwort_agent_arr.length; i++){								if(antwort_agent_arr[i].getMyRole != curVid.getMyRole){					//trace("Rolle bei Norm: "+uni_antwort_agent_arr[i].getMyRole);					//trace("TAgs bei NORM: "+antwort_agent_arr[i].getTags);					if((antwort_agent_arr[i].getMyTags == curVid.getMyTags) && (antwort_agent_arr[i].getTags != "keine")){						_temp_arr_def.push(i);						trace("TAGS bei NORM:MATCHING......: "+uni_antwort_agent_arr[i].getTags);					}else{						//_temp_arr.push(i);					}				}			}			trace("Länge des Ergebnisarrays: "+_temp_arr_def.length);						if(_temp_arr_def.length>0){				return _temp_arr_def[Utils.randRound(_temp_arr_def.length)];			}else{				return _temp_arr[Utils.randRound(_temp_arr.length)];			}		}				private function checkNachfolger_uni (curVid:BouncerObject): int 		{			var _temp_arr:Array = [];			for (var i:int = 0;  i<uni_antwort_agent_arr.length; i++){								if(uni_antwort_agent_arr[i].getMyRole != curVid.getMyRole){					//trace("Rolle bei UNI: "+uni_antwort_agent_arr[i].getMyRole);					_temp_arr.push(i);				}			}			return _temp_arr[Utils.randRound(_temp_arr.length)];		}				private function randomAsk (_arr:Array, _str:String): int 		{			var _temp_arr:Array = [];			for (var i:int = 0;  i<_arr.length; i++){								if(_arr[i].getMyRole != _str){					_temp_arr.push(i);				}			}			return _temp_arr[Utils.randRound(_temp_arr.length)];		}	}}