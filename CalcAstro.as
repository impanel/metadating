/* AS3	Copyright 2009 Gali.*/package {		import flash.events.*;	import AstroObject;	import flash.display.*;	import Utils;	/**	 *	Class description.	 *	 *	@langversion ActionScript 3.0	 *	@playerversion Flash 9.0	 *	 *	@author Sven Gali	 *	@since  01.02.2009	 */	public class CalcAstro extends MovieClip {				//--------------------------------------		// CLASS CONSTANTS		//--------------------------------------				//--------------------------------------		//  CONSTRUCTOR		//--------------------------------------				/**		 *	@Constructor		 */		public function CalcAstro (){					}				//--------------------------------------		//  PRIVATE VARIABLES		//--------------------------------------				private var playList: Array;		private var videoObjects: Array;				//Pools		private var anmod_arr:Array = new Array();				//philipps arrays				//3		private var marcus_hello:Array = new Array();		private var cosma_hello:Array = new Array();		private var gabi_hello:Array = new Array();		private var mustafa_hello:Array = new Array();		private var first_caller:Array = [marcus_hello, cosma_hello, gabi_hello, mustafa_hello];		private var first_caller_agent:int;				//4		private var illuna_begruesst_marcus:Array = new Array();		private var illuna_begruesst_cosma:Array = new Array();		private var illuna_begruesst_gabi:Array = new Array();		private var illuna_begruesst_mustafa:Array = new Array();				//5		private var marcus_frage:Array = new Array()		private var cosma_frage:Array = new Array()		private var gabi_frage:Array = new Array()		private var mustafa_frage:Array = new Array()				//6 u. 8		private var illuna_antwort_allgemein:Array = new Array();		private var illuna_antwort_marcus:Array = new Array();		private var illuna_antwort_cosma:Array = new Array();		private var illuna_antwort_gabi:Array = new Array();		private var illuna_antwort_mustafa:Array = new Array();		private var illuna_antwort_speziell:Array = [illuna_antwort_marcus, illuna_antwort_cosma, illuna_antwort_gabi, illuna_antwort_mustafa];		private var illuna_antwort:Array = [illuna_antwort_allgemein, illuna_antwort_speziell];		private var illuna_antwort_agent:int;				//7		private var marcus_nachhaken_p:Array = new Array();		private var marcus_nachhaken_n:Array = new Array();		private var marcus_nachhaken_0:Array = new Array();		private var marcus_nachhaken:Array = [marcus_nachhaken_p, marcus_nachhaken_n, marcus_nachhaken_0];		private var marcus_weitere_frage:Array = new Array();		private var marcus_reaktion:Array = [marcus_nachhaken, marcus_weitere_frage];				private var cosma_nachhaken_p:Array = new Array();		private var cosma_nachhaken_n:Array = new Array();		private var cosma_nachhaken_0:Array = new Array();		private var cosma_nachhaken:Array = [cosma_nachhaken_p, cosma_nachhaken_n, cosma_nachhaken_0];		private var cosma_weitere_frage:Array = new Array();		private var cosma_reaktion:Array = [cosma_nachhaken, cosma_weitere_frage];				private var gabi_nachhaken_p:Array = new Array();		private var gabi_nachhaken_n:Array = new Array();		private var gabi_nachhaken_0:Array = new Array();		private var gabi_nachhaken:Array = [gabi_nachhaken_p, gabi_nachhaken_n, gabi_nachhaken_0];		private var gabi_weitere_frage:Array = new Array();		private var gabi_reaktion:Array = [gabi_nachhaken, gabi_weitere_frage];				private var mustafa_nachhaken:Array = new Array();		private var mustafa_weitere_frage:Array = new Array();		private var mustafa_reaktion:Array = [mustafa_nachhaken, mustafa_weitere_frage ];				private var anrufer_reaktion:Array = [marcus_reaktion, cosma_reaktion, gabi_reaktion, mustafa_reaktion];		private var anrufer_reaktion_agent:int;				//9		private var marcus_verabschiedung_p:Array = new Array();		private var marcus_verabschiedung_n:Array = new Array();		private var cosma_verabschiedung_p:Array = new Array();		private var cosma_verabschiedung_n:Array = new Array();		private var gabi_verabschiedung_p:Array = new Array();		private var gabi_verabschiedung_n:Array = new Array();		private var mustafa_verabschiedung_n:Array = new Array();		private var verabschiedung_positiv:Array = [marcus_verabschiedung_p, cosma_verabschiedung_p, gabi_verabschiedung_p];		private var verabschiedung_negativ:Array = [marcus_verabschiedung_n, cosma_verabschiedung_n, gabi_verabschiedung_n, mustafa_verabschiedung_n];						//10		private var illuna_verabschiedung_positiv:Array = new Array();		private var illuna_verabschiedung_negativ:Array = new Array();		private var illuna_verabschiedung_pizza:Array = new Array();		private var illuna_verabschiedung:Array = [illuna_verabschiedung_positiv, illuna_verabschiedung_negativ, illuna_verabschiedung_pizza];				//Helpers		private var checkDoublesObject:AstroObject;		private var checkDoublesObject2:AstroObject;		private var setMoodString:String;		private var illunasAntwort:String;		private var moodDependency:String;		private var traceThis:String;				//--------------------------------------		//  PUBLIC METHODS		//--------------------------------------						public function calculateClips(xml:XMLList): Array {			playList = new Array ();			videoObjects = new Array ();						//Videoobjecte parsen und in Array legen			for (var i:int = 0; i<xml.length(); i++)			{				videoObjects[i] = new AstroObject (													  i 																		, xml[i].file.text()															, xml[i].myRole.text()															, xml[i].myCategory.text()													, xml[i].myAttribute.text()													, xml[i].myThema.text()												);								//zu 2. Anmoderation der Moderatorin				if(videoObjects[i].getMyCategory == "Anmoderation"){					anmod_arr.push(videoObjects[i]);				}				//zu 3. Anrufer begruesst Moderatorin				if((videoObjects[i].getMyCategory == "Begruessung") && (videoObjects[i].getMyRole != "Illona")){					switch(videoObjects[i].getMyRole){						case "Marcus":							first_caller[marcus_hello.push(videoObjects[i])];						break;											case "Gabi":							first_caller[gabi_hello.push(videoObjects[i])];						break;											case "Cosma":							first_caller[cosma_hello.push(videoObjects[i])];						break;											case "Mustafa":							first_caller[mustafa_hello.push(videoObjects[i])];						break;					}				}				//zu 4. Moderatorin begruesst den Anrufer				if((videoObjects[i].getMyCategory == "Begruessung") && (videoObjects[i].getMyRole == "Illona")){					switch(videoObjects[i].getThema){						case "Finanzen":							illuna_begruesst_marcus.push(videoObjects[i]);						break;						case "Partnerschaft":							illuna_begruesst_cosma.push(videoObjects[i]);						break;						case "Gesundheit":							illuna_begruesst_gabi.push(videoObjects[i]);						break;						case "Pizza":							illuna_begruesst_mustafa.push(videoObjects[i]);						break;					}				}				//zu 5. Anrufer stellt eine Frage				if(((videoObjects[i].getMyCategory == "Frage") && (videoObjects[i].getMyRole != "Illona")) && ((videoObjects[i].getMyAttribute == "Ausgewogen") || ((videoObjects[i].getMyAttribute == "Negativ") && (videoObjects[i].getMyRole == "Mustafa")))){					switch(videoObjects[i].getThema){						case "Finanzen":							marcus_frage.push(videoObjects[i]);						break;						case "Partnerschaft":							cosma_frage.push(videoObjects[i]);						break;						case "Gesundheit":							gabi_frage.push(videoObjects[i]);						break;						case "Pizza":							mustafa_frage.push(videoObjects[i]);						break;					}				}				//zu 6. Moderatorin antwortet auf die Frage des Anrufers				if((videoObjects[i].getMyCategory == "Antwort") && (videoObjects[i].getMyRole == "Illona")){					if(videoObjects[i].getThema == "Allgemein"){						//trace("antwort_allgemein");						illuna_antwort[illuna_antwort_allgemein.push(videoObjects[i])];					}else{						switch(videoObjects[i].getThema){							case "Finanzen":							illuna_antwort[illuna_antwort_speziell[illuna_antwort_marcus.push(videoObjects[i])]];							break;							case "Partnerschaft":							illuna_antwort[illuna_antwort_speziell[illuna_antwort_cosma.push(videoObjects[i])]];							break;							case "Gesundheit":							illuna_antwort[illuna_antwort_speziell[illuna_antwort_gabi.push(videoObjects[i])]];							break;							case "Pizza":							illuna_antwort[illuna_antwort_speziell[illuna_antwort_mustafa.push(videoObjects[i])]];							break;						}					}					}								//zu 7. Der Anrufer stellt eine erneute Frage oder hackt nach				if(((videoObjects[i].getMyCategory == "Frage") || (videoObjects[i].getMyCategory == "Nachhaken")) && (videoObjects[i].getMyRole != "Illona")){				   		if((videoObjects[i].getMyRole == "Marcus")){							if(videoObjects[i].getMyCategory == "Nachhaken"){								switch (videoObjects[i].getMyAttribute){									case "Positiv":										anrufer_reaktion[marcus_reaktion[marcus_nachhaken[marcus_nachhaken_p.push(videoObjects[i])]]];									break;									case "Negativ":										anrufer_reaktion[marcus_reaktion[marcus_nachhaken[marcus_nachhaken_n.push(videoObjects[i])]]];									break;									case "Ausgewogen":										anrufer_reaktion[marcus_reaktion[marcus_nachhaken[marcus_nachhaken_0.push(videoObjects[i])]]];									break;								}							}else{								anrufer_reaktion[marcus_reaktion[marcus_weitere_frage.push(videoObjects[i])]];							}						}						if((videoObjects[i].getMyRole == "Cosma")){							if(videoObjects[i].getMyCategory == "Nachhaken"){								switch (videoObjects[i].getMyAttribute){									case "Positiv":										anrufer_reaktion[cosma_reaktion[cosma_nachhaken[cosma_nachhaken_p.push(videoObjects[i])]]];									break;									case "Negativ":										anrufer_reaktion[cosma_reaktion[cosma_nachhaken[cosma_nachhaken_n.push(videoObjects[i])]]];									break;									case "Ausgewogen":										anrufer_reaktion[cosma_reaktion[cosma_nachhaken[cosma_nachhaken_0.push(videoObjects[i])]]];									break;								}							}else{								anrufer_reaktion[cosma_reaktion[cosma_weitere_frage.push(videoObjects[i])]];							}						}						if((videoObjects[i].getMyRole == "Gabi")){							if(videoObjects[i].getMyCategory == "Nachhaken"){								switch (videoObjects[i].getMyAttribute){									case "Positiv":										anrufer_reaktion[gabi_reaktion[gabi_nachhaken[gabi_nachhaken_p.push(videoObjects[i])]]];									break;									case "Negativ":										anrufer_reaktion[gabi_reaktion[marcus_nachhaken[gabi_nachhaken_n.push(videoObjects[i])]]];									break;									case "Ausgewogen":										anrufer_reaktion[gabi_reaktion[marcus_nachhaken[gabi_nachhaken_0.push(videoObjects[i])]]];									break;								}							}else{								anrufer_reaktion[gabi_reaktion[gabi_weitere_frage.push(videoObjects[i])]];							}						}						if((videoObjects[i].getMyRole == "Mustafa")){							if(videoObjects[i].getMyCategory == "Nachhaken"){								anrufer_reaktion[mustafa_reaktion[mustafa_nachhaken.push(videoObjects[i])]];							}else{								anrufer_reaktion[mustafa_reaktion[mustafa_weitere_frage.push(videoObjects[i])]];							}						}			   }			   			   	//zu 8. siehe 6			   	//zu 9.			  	if(videoObjects[i].getMyCategory == "Verabschiedung" && videoObjects[i].getMyRole != "Illona"){				  if(videoObjects[i].getMyAttribute == "Positiv"){					//trace("verabschiedung_p");				  	switch (videoObjects[i].getMyRole){					  case "Marcus":					  	verabschiedung_positiv[marcus_verabschiedung_p.push(videoObjects[i])];					  break;					  case "Cosma":					  	verabschiedung_positiv[cosma_verabschiedung_p.push(videoObjects[i])];					  break;					  case "Gabi":					  	verabschiedung_positiv[gabi_verabschiedung_p.push(videoObjects[i])];					  break;				  	}				  }else{					  switch (videoObjects[i].getMyRole){					  case "Marcus":					  	verabschiedung_negativ[marcus_verabschiedung_n.push(videoObjects[i])];					  break;					  case "Cosma":					  	verabschiedung_negativ[cosma_verabschiedung_n.push(videoObjects[i])];					  break;					  case "Gabi":					  	verabschiedung_negativ[gabi_verabschiedung_n.push(videoObjects[i])];					  break;					  case "Mustafa":					  	verabschiedung_negativ[mustafa_verabschiedung_n.push(videoObjects[i])];					  break;				  	}				  }				}								//zu 10.				if(videoObjects[i].getMyCategory == "Verabschiedung" && videoObjects[i].getMyRole == "Illona"){					if(videoObjects[i].getThema == "Allgemein"){						if(videoObjects[i].getMyAttribute == "Negativ"){							illuna_verabschiedung[illuna_verabschiedung_negativ.push(videoObjects[i])];						}else{							illuna_verabschiedung[illuna_verabschiedung_positiv.push(videoObjects[i])];						}					}else{						illuna_verabschiedung[illuna_verabschiedung_pizza.push(videoObjects[i])];					}				}			}						// Determines the first caller: 0:Markus 1:Cosma 2:Gabi 3:Mustafa			//first_caller_agent = 3;			first_caller_agent = Utils.randRound(first_caller.length);			trace("first_caller:" +first_caller_agent);			illuna_antwort_agent = Utils.randRound(illuna_antwort.length);			//illuna_antwort_agent = 0;			anrufer_reaktion_agent = Utils.randRound(2);									//1.			playList.push("intro.mov");			//2.			playList.push(anmod_arr[Utils.randRound(anmod_arr.length)].getUrl);			//3.			playList.push(first_caller[first_caller_agent][Utils.randRound(first_caller[first_caller_agent].length)].getUrl);			//4.			switch(first_caller_agent){				case 0:					playList.push(illuna_begruesst_marcus[Utils.randRound(illuna_begruesst_marcus.length)].getUrl);				break;				case 1:					playList.push(illuna_begruesst_cosma[Utils.randRound(illuna_begruesst_cosma.length)].getUrl);				break;				case 2:					playList.push(illuna_begruesst_gabi[Utils.randRound(illuna_begruesst_gabi.length)].getUrl);				break;				case 3:					playList.push(illuna_begruesst_mustafa[Utils.randRound(illuna_begruesst_mustafa.length)].getUrl);				break;			}						//5.			switch(first_caller_agent){				case 0:					playList.push(marcus_frage[Utils.randRound(marcus_frage.length)].getUrl);				break;				case 1:					playList.push(cosma_frage[Utils.randRound(cosma_frage.length)].getUrl);				break;				case 2:					playList.push(gabi_frage[Utils.randRound(gabi_frage.length)].getUrl);				break;				case 3:					playList.push(mustafa_frage[Utils.randRound(mustafa_frage.length)].getUrl);				break;			}						//6.			switch(illuna_antwort_agent){				case 0:					checkDoublesObject = illuna_antwort[0][Utils.randRound(illuna_antwort[0].length)];					setMoodString = checkDoublesObject.getMyAttribute;					trace("set mood to: " +setMoodString);					illunasAntwort = checkDoublesObject.getThema;					playList.push(checkDoublesObject.getUrl);				break;				case 1:					switch(first_caller_agent){						case 0:							checkDoublesObject = illuna_antwort[1][0][Utils.randRound(illuna_antwort[1][0].length)];							setMoodString = checkDoublesObject.getMyAttribute;							trace("set mood to: " +setMoodString);							illunasAntwort = checkDoublesObject.getThema;							playList.push(checkDoublesObject.getUrl);						break;						case 1:							checkDoublesObject = illuna_antwort[1][1][Utils.randRound(illuna_antwort[1][1].length)];							setMoodString = checkDoublesObject.getMyAttribute;							trace("set mood to: " +setMoodString);							illunasAntwort = checkDoublesObject.getThema;							playList.push(checkDoublesObject.getUrl);							trace(setMoodString);							trace(illunasAntwort);						break;						case 2:							checkDoublesObject = illuna_antwort[1][2][Utils.randRound(illuna_antwort[1][2].length)];							setMoodString = checkDoublesObject.getMyAttribute;							trace("set mood to: " +setMoodString);							illunasAntwort = checkDoublesObject.getThema;							playList.push(checkDoublesObject.getUrl);						break;						case 3:							checkDoublesObject = illuna_antwort[1][3][Utils.randRound(illuna_antwort[1][3].length)];							setMoodString = checkDoublesObject.getMyAttribute;							trace("set mood to: " +setMoodString);							illunasAntwort = checkDoublesObject.getThema;							playList.push(checkDoublesObject.getUrl);						break;					}				break;			}			//7.			switch(first_caller_agent){				case 0:					if(illunasAntwort != "Allgemein"){						playList.push(anrufer_reaktion[0][1][Utils.randRound(anrufer_reaktion[0][1].length)].getUrl);					}else{						switch(setMoodString){							case "Positiv":								trace("Mood is: " + setMoodString);								playList.push(anrufer_reaktion[0][0][0][Utils.randRound(anrufer_reaktion[0][0][0].length)].getUrl);							break;							case "Negativ":								trace("Mood is: " + setMoodString);								playList.push(anrufer_reaktion[0][0][1][Utils.randRound(anrufer_reaktion[0][0][1].length)].getUrl);							break;							case "Ausgewogen":								trace("Mood is: " + setMoodString);								playList.push(anrufer_reaktion[0][0][2][Utils.randRound(anrufer_reaktion[0][0][2].length)].getUrl);							break;						}					}									break;				case 1:					if(illunasAntwort != "Allgemein"){						playList.push(anrufer_reaktion[1][1][Utils.randRound(anrufer_reaktion[1][1].length)].getUrl);					}else{						switch(setMoodString){							case "Positiv":								playList.push(anrufer_reaktion[1][0][0][Utils.randRound(anrufer_reaktion[1][0][0].length)].getUrl);								trace("Mood is: " + setMoodString);							break;							case "Negativ":								playList.push(anrufer_reaktion[1][0][1][Utils.randRound(anrufer_reaktion[1][0][1].length)].getUrl);								trace("Mood is: " + setMoodString);							break;							case "Ausgewogen":								playList.push(anrufer_reaktion[1][0][2][Utils.randRound(anrufer_reaktion[1][0][2].length)].getUrl);								trace("Mood is: " + setMoodString);							break;						}					}									break;				case 2:					if(illunasAntwort != "Allgemein"){						playList.push(anrufer_reaktion[2][1][Utils.randRound(anrufer_reaktion[2][1].length)].getUrl);					}else{						switch(setMoodString){							case "Positiv":								trace("Mood is: " + setMoodString);								playList.push(anrufer_reaktion[2][0][0][Utils.randRound(anrufer_reaktion[2][0][0].length)].getUrl);							break;							case "Negativ":								trace("Mood is: " + setMoodString);								playList.push(anrufer_reaktion[2][0][1][Utils.randRound(anrufer_reaktion[2][0][1].length)].getUrl);							break;							case "Ausgewogen":								trace("Mood is: " + setMoodString);								playList.push(anrufer_reaktion[2][0][2][Utils.randRound(anrufer_reaktion[2][0][2].length)].getUrl);							break;						}					} 				break;				case 3:					if(illunasAntwort != "Allgemein"){						playList.push(anrufer_reaktion[3][1][Utils.randRound(anrufer_reaktion[3][1].length)].getUrl);					}else{						playList.push(anrufer_reaktion[3][0][Utils.randRound(anrufer_reaktion[3][0].length)].getUrl);					}				break;			}						//8. wie 6. doppelte Antworten werden vermieden			switch(illuna_antwort_agent){				case 0: 					checkDoublesObject2 = illuna_antwort[0][Utils.randRound(illuna_antwort[0].length)];					moodDependency = checkDoublesObject2.getMyAttribute;					while((checkDoublesObject.getUrl == checkDoublesObject2.getUrl) || (moodDependency != setMoodString)){						checkDoublesObject2 = illuna_antwort[0][Utils.randRound(illuna_antwort[0].length)];						moodDependency = checkDoublesObject2.getMyAttribute;					}					trace("mood in 2nd answer: " + moodDependency);					playList.push(checkDoublesObject2.getUrl);				break;				case 1:					switch(first_caller_agent){						case 0:							checkDoublesObject2 = illuna_antwort[1][0][Utils.randRound(illuna_antwort[1][0].length)];							moodDependency = checkDoublesObject2.getMyAttribute;							while((checkDoublesObject.getUrl == checkDoublesObject2.getUrl) || (moodDependency != setMoodString)){								checkDoublesObject2 = illuna_antwort[1][0][Utils.randRound(illuna_antwort[1][0].length)];								moodDependency = checkDoublesObject2.getMyAttribute;							}							playList.push(checkDoublesObject2.getUrl);						break;						case 1:							checkDoublesObject2 = illuna_antwort[1][1][Utils.randRound(illuna_antwort[1][1].length)];							traceThis = checkDoublesObject2.getThema;							moodDependency = checkDoublesObject2.getMyAttribute;							while((checkDoublesObject.getUrl == checkDoublesObject2.getUrl) || (moodDependency != setMoodString)){								checkDoublesObject2 = illuna_antwort[1][1][Utils.randRound(illuna_antwort[1][1].length)];								moodDependency = checkDoublesObject2.getMyAttribute;							}							playList.push(checkDoublesObject2.getUrl);						break;						case 2:							checkDoublesObject2 = illuna_antwort[1][2][Utils.randRound(illuna_antwort[1][2].length)];							moodDependency = checkDoublesObject2.getMyAttribute;							while((checkDoublesObject.getUrl == checkDoublesObject2.getUrl) || (moodDependency != setMoodString)){								checkDoublesObject2 = illuna_antwort[1][2][Utils.randRound(illuna_antwort[1][2].length)];								moodDependency = checkDoublesObject2.getMyAttribute;							}							playList.push(checkDoublesObject2.getUrl);						break;						case 3:							checkDoublesObject2 = illuna_antwort[1][3][Utils.randRound(illuna_antwort[1][3].length)];							while((checkDoublesObject.getUrl == checkDoublesObject2.getUrl) || (moodDependency != "Negativ")){								checkDoublesObject2 = illuna_antwort[1][3][Utils.randRound(illuna_antwort[1][3].length)];								moodDependency = checkDoublesObject2.getMyAttribute;							}							playList.push(checkDoublesObject2.getUrl);						break;					}				break;			}			//9.			if((setMoodString == "Positiv" || setMoodString == "Ausgewogen") && first_caller_agent != 3){				switch(first_caller_agent){				case 0:					trace("9_p");					playList.push(verabschiedung_positiv[0][Utils.randRound(verabschiedung_positiv[0].length)].getUrl);				break;				case 1:					playList.push(verabschiedung_positiv[1][Utils.randRound(verabschiedung_positiv[1].length)].getUrl);				break;				case 2:					playList.push(verabschiedung_positiv[2][Utils.randRound(verabschiedung_positiv[2].length)].getUrl);				break;				}			}else{				switch(first_caller_agent){				case 0:					trace("9_n");					playList.push(verabschiedung_negativ[0][Utils.randRound(verabschiedung_negativ[0].length)].getUrl);				break;				case 1:					playList.push(verabschiedung_negativ[1][Utils.randRound(verabschiedung_negativ[1].length)].getUrl);				break;				case 2:					playList.push(verabschiedung_negativ[2][Utils.randRound(verabschiedung_negativ[2].length)].getUrl);				break;				case 3:					playList.push(verabschiedung_negativ[3][Utils.randRound(verabschiedung_negativ[3].length)].getUrl);				break;				}			}			//10.			if(first_caller_agent < 3 && (setMoodString == "Positiv" || setMoodString == "Ausgewogen")){				playList.push(illuna_verabschiedung[0][Utils.randRound(illuna_verabschiedung[0].length)].getUrl);			}else if(first_caller_agent < 3 && setMoodString == "Negativ"){				playList.push(illuna_verabschiedung[1][Utils.randRound(illuna_verabschiedung[1].length)].getUrl);			}else if(first_caller_agent == 3){				playList.push(illuna_verabschiedung[2][Utils.randRound(illuna_verabschiedung[2].length)].getUrl);			}									trace(playList);			return playList;		}	}}